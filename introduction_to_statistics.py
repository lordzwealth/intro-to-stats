# -*- coding: utf-8 -*-
"""Introduction to Statistics.ipynb

Automatically generated by Colaboratory.

Original file is located at
    https://colab.research.google.com/drive/18z41w1kkg_rs8rO0rs-YxxCcvTCK68jy

- Statistics: a practice and study of collecting and analyzing data
- Summary stats: a fact or summary about data

### What can statistics do?

With statistics, you can answer business questions from data:
- Like how likely is a person to purchase a product?
- If you used a certain advert will people purchase it more?
- How many T-shirts will you produce to fit 95% percent of the population/ your target market?

### What can't statistics do?
"""



"""### Types of statistics

- Identify which questions can be answered with descriptive statistics and which questions can be answered with inferential statistics.

    1. Given the data of 50 patients in a hospital, what is the average weight of all the patients in the hospital?
    2. Given the data on every customer request made, what is the average time it took to respond?
    3.  Given the data on all 100,000 people who took a course, what percent of people reated it 5-star?
    4. After veiwing 100 customers, what percentage of all your customers are satisfied with your product?

### Types of data
"""

# Numeric Data
# Categorical Data

"""- What type of data is this?
    - Air temperature - numeric (continous)
    - Killowatts of Electricity used
    - Nummber of items in a stock
    - Number of Assesments taken
    - Number of clicks on an ad
    - Brand of a product
    - zip code
"""

filepath = "/content/ds_salaries.csv"
import pandas as pd
df = pd.read_csv(filepath)
df.drop('Unnamed: 0', axis=1, inplace=True)

df.info()

df.columns

data_type = {'work_year':'categorical',
             'experience_level':'categorical_ord',
             'employment_type': 'categorical_nom',
             'job_title': 'categorical_nom',
             'salary': 'numeric_con',
             'salary_currency': 'categorical_nom',
             'salary_in_usd':'numeric_con',
             'employee_residence': 'categorical_nom',
             'remote_ratio': 'categorical_ord',
             'company_location': '?',
             'company_size':'?'}

df.head()

df['employment_type'].value_counts()

"""### Descriptive Statistics

- Measures of central tendency
-  Measures of spread
"""

# mean
# sum of data points / number of data points
# heavily influenced by outliers

# median
# middle of the distribution
# robust to outliers

# Commented out IPython magic to ensure Python compatibility.
# %matplotlib inline

import numpy as np
import pandas as pd
import matplotlib.pyplot as plt

norm_data = pd.DataFrame(np.random.normal(size = 100000))

norm_data.plot(kind='density',
              figsize = (7, 5));

plt.vlines(norm_data.mean(),
          ymin=0,
          ymax=0.3,
          linewidth = 5.0);

plt.vlines(norm_data.median(),
          ymin=0,
          ymax=0.4,
          linewidth = 2.0,
          color = 'red');

skewed_data = pd.DataFrame(np.random.exponential(size=100000))

skewed_data.plot(kind="density",
              figsize=(7,5),
              xlim=(-1,5));


plt.vlines(skewed_data.mean(),     # Plot black line at mean
           ymin=0,
           ymax=0.8,
           linewidth=5.0);

plt.vlines(skewed_data.median(),   # Plot red line at median
           ymin=0,
           ymax=0.8,
           linewidth=2.0,
           color="red");

# mode
# most frequent value

df.job_title.mode()

df.mode()

df.salary.plot(kind = 'density')
plt.show()

df.salary.value_counts()

# how do salaries vary by country?

salary_by_country = df.groupby('employee_residence')['salary_in_usd'].mean().sort_values(ascending=False)

salary_by_country[:10]

plt.figure(figsize=(10, 7))
plt.bar(salary_by_country[:20].index, salary_by_country[:20].values)

plt.xticks(rotation=90)
plt.xlabel('Country')
plt.ylabel('Average Salary (USD)')
plt.title('Average Salary by Country for Data Scientist')
plt.show()

df.columns

# what is the average salary for a data scientist?
# sum of salary / number of items = mean or average
data_scientist = df[df['job_title'] == 'Data Scientist']
round(data_scientist['salary_in_usd'].mean(), 2)

# how do salaries vary by expereince level?

def avg_salary_by_role(role):
    role_df = df[df['job_title'] == role]
    return round(role_df['salary_in_usd'].mean(), 2)

avg_salary_by_role('Data Engineer')

df.job_title.value_counts()

df.describe()

df.head()

# how do salaries vary by expereince level?

df.groupby('experience_level')['salary_in_usd'].mean()

df.groupby(['experience_level', 'job_title'])['salary_in_usd'].mean().sort_values(ascending =False)

df.pivot_table(values='salary_in_usd', index='experience_level', aggfunc='mean')

# which job titles pay the highest
df.pivot_table(values='salary_in_usd', index='job_title', aggfunc='mean').sort_values(by='salary_in_usd', ascending=False)

df.groupby('job_title')['salary_in_usd'].mean().sort_values(ascending =False)

job_title_salaries = df.groupby('job_title')['salary_in_usd'].mean().sort_values(ascending =True)

fig, ax = plt.subplots(figsize = (8,20))
ax.barh(job_title_salaries.index, job_title_salaries.values)
ax.set_title('Average Salaries by Job Title')
ax.set_xlabel('Salary in USD')
ax.set_ylabel('Job Title')
plt.grid(True, axis='x', linestyle='--')
plt.show()

df.salary_in_usd.hist()
plt.show()

print(f'mean salary: {df.salary_in_usd.mean()}')
print(f'median salary: {df.salary_in_usd.median()}')
print(f'mode salary: {df.salary_in_usd.mode()[0]}')

df.salary_in_usd.mode()